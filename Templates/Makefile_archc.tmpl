\# \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\###
\# This is the Makefile for building the %s ArchC model
\# This file is automatically generated by ArchC
\# WITHOUT WARRANTY OF ANY KIND, either express
\# or implied.
\# For more information on ArchC, please visit:
\# http://www.archc.org
\# ##
\# The ArchC Team
\# Computer Systems Laboratory (LSC)
\# IC-UNICAMP
\# http://www.lsc.ic.unicamp.br
\# \#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\#\###

\# Variable that points to SystemC installation path
SYSTEMC := $SYSTEMC_PATH

\# Variable that points to ArchC installation path
ARCHC := $BINDIR

\# Target Arch used by SystemC
TARGET_ARCH := $TARGET_ARCH

INC_DIR := -I. -I$(INCLUDEDIR) -I\$(SYSTEMC)/include #slurp
## #if ($HaveTLMPorts or $HaveTLMIntrPorts) -I$TLM_PATH
#if ($HaveTLMPorts or $HaveTLMIntrPorts or $HaveTLM2Ports or $HaveTLM2NBPorts or $HaveTLM2IntrPorts)
-I$(TLM_PATH)#slurp
#end if

LIB_DIR := -L. -L\$(SYSTEMC)/lib-\$(TARGET_ARCH) -L$(LIBDIR)

LIB_SYSTEMC := #slurp
#if ($SYSTEMC_PATH.__len__() > 2)
-lsystemc #slurp
#end if

LIBS := \$(LIB_SYSTEMC) -lm \$(EXTRA_LIBS) -larchc

CC := $CC_PATH

OPT := $OPT_FLAGS

DEBUG := $DEBUG_FLAGS

OTHER := #slurp
##!< The guest arch is big endian?
#if ($ac_tgt_endian)
 -DAC_GUEST_BIG_ENDIAN#slurp
#end if
##!< The guest and host arch is the same endianness?
#if ($ac_match_endian)
 -DAC_MATCH_ENDIANNESS#slurp
#end if
 $OTHER_FLAGS
 
CFLAGS := \$(DEBUG) \$(OPT) \$(OTHER) #slurp
#if ($ACGDBIntegrationFlag)
-DUSE_GDB #slurp
#end if


MODULE := $(project_name)

##Declaring ACSRCS variable
\# These are the source files automatically generated by ArchC, that must appear in the SRCS variable
ACSRCS := \$(MODULE)_arch.cpp \$(MODULE)_arch_ref.cpp \$(MODULE).cpp

##Declaring ACINCS variable
\# These are the source files automatically generated  by ArchC that are included by other files in ACSRCS
ACINCS := \$(MODULE)_isa_init.cpp

##Declaring ACHEAD variable
\# These are the header files automatically generated by ArchC
ACHEAD := \$(MODULE)_parms.H \$(MODULE)_arch.H \$(MODULE)_arch_ref.H \$(MODULE)_isa.H \$(MODULE)_bhv_macros.H #slurp
#if ($HaveFormattedRegs)
\$(MODULE)_fmt_regs.H #slurp
#end if
#if ($ACStatsFlag)
$(project_name)_stats.H #slurp
#end if
\$(MODULE).H #slurp
#if ($HaveTLMIntrPorts)
\$(MODULE)_intr_handlers.H \$(MODULE)_ih_bhv_macros.H #slurp
#end if


#if ($HaveTLM2IntrPorts)
\$(MODULE)_intr_handlers.H \$(MODULE)_ih_bhv_macros.H 

#end if
##Declaring FILES variable
\# These are the source files provided by ArchC that must be compiled together with the ACSRCS
\# They are stored in the archc/src/aclib directory
ACFILES := #slurp
#if ($HaveMemHier)
ac_cache.cpp ac_mem.cpp ac_cache_if.cpp #slurp
#end if


##Declaring ACLIBFILES variable
\# These are the library files provided by ArchC
\# They are stored in the archc/lib directory
ACLIBFILES := ac_decoder_rt.o ac_module.o ac_storage.o ac_utils.o #slurp
#if ($ACABIFlag)
ac_syscall.o #slurp
#end if
#if ($HaveTLMPorts)
ac_tlm_port.o #slurp
#end if
#if ($HaveTLM2Ports)
ac_tlm2_port.o #slurp
#end if
#if ($HaveTLM2NBPorts)
ac_tlm2_nb_port.o #slurp
#end if
#if ($HaveTLMIntrPorts)
ac_tlm_intr_port.o #slurp
#end if
#if ($HaveTLM2IntrPorts)
ac_tlm2_intr_port.o #slurp
#end if


##Declaring FILESHEAD variable
\# These are the headers files provided by ArchC
\# They are stored in the archc/include directory
ACFILESHEAD := \$(ACFILES:.cpp=.H) ac_decoder_rt.H ac_module.H ac_storage.H ac_utils.H ac_regbank.H ac_debug_model.H ac_sighandlers.H ac_ptr.H ac_memport.H ac_arch.H ac_arch_dec_if.H ac_arch_ref.H #slurp
#if ($ACABIFlag)
ac_syscall.H #slurp
#end if
#if ($HaveTLMPorts)
ac_tlm_port.H #slurp
#end if
#if ($HaveTLM2Ports)
ac_tlm2_port.H #slurp
#end if
#if ($HaveTLM2NBPorts)
ac_tlm2_nb_port.H #slurp
#end if
#if ($HaveTLMIntrPorts)
ac_tlm_intr_port.H #slurp
#end if
#if ($HaveTLM2IntrPorts)
ac_tlm2_intr_port.H #slurp
#end if
#if ($HaveTLMPorts or $HaveTLMIntrPorts or $HaveTLM2NBPorts or $HaveTLM2Ports or $HaveTLM2IntrPorts)
ac_tlm_protocol.H #slurp
#end if
#if ($ACStatsFlag)
ac_stats.H ac_stats_base.H #slurp
#end if


##Declaring SRCS variable
##Note: Removed \$(MODULE)_isa.cpp, added as include inside \$(MODULE).cpp
\# These are the source files provided by the user + ArchC sources
SRCS := main.cpp \$(ACSRCS) \$(ACFILES) #slurp
#if ($ACGDBIntegrationFlag)
\$(MODULE)_gdb_funcs.cpp #slurp
#end if
#if ($ACABIFlag)
 \$(MODULE)_syscall.cpp#slurp
#end if
#if ($HaveTLMIntrPorts)
 \$(MODULE)_intr_handlers.cpp#slurp
#end if
#if ($HaveTLM2IntrPorts)
 \$(MODULE)_intr_handlers.cpp#slurp
#end if
#if ($ACStatsFlag)
 \$(MODULE)_stats.cpp#slurp
#end if


##Declaring OBJS variable
OBJS := \$(SRCS:.cpp=.o)

##Declaring Executable name
EXE := \$(MODULE).x

##Declaring dependencie rules
.SUFFIXES: .cc .cpp .o .x

all: \$(addprefix $(INCLUDEDIR)/, \$(ACFILESHEAD))#slurp
#if ($ACABIFlag)
 \$(MODULE)_syscall.H#slurp
#end if
 \$(ACHEAD) \$(ACFILES) \$(EXE)

\$(EXE): \$(OBJS) #slurp
#if ($SYSTEMC_PATH.__len__() > 2)
\$(SYSTEMC)/lib-\$(TARGET_ARCH)/libsystemc.a#slurp
#end if

	\$(CC) \$(CFLAGS) \$(INC_DIR) \$(LIB_DIR) -o $@ \$(OBJS) \$(LIBS) 2>&1 | c++filt

\# Copy from template if main.cpp not exist
main.cpp:
	cp main.cpp.tmpl main.cpp

#if ($ACABIFlag)
\# Copy from template if $(project_name)_syscall.H not exist
$(project_name)_syscall.H:
	cp $(project_name)_syscall.H.tmpl $(project_name)_syscall.H

#end if
#if ($ACStatsFlag)
\# Copy from template if $(project_name)_stats.H not exist
$(project_name)_stats.H:
	cp $(project_name)_stats.H.tmpl $(project_name)_stats.H

\# Copy from template if $(project_name)_stats.cpp not exist
$(project_name)_stats.cpp:
	cp $(project_name)_stats.cpp.tmpl $(project_name)_stats.cpp

#end if
#if ($HaveTLMIntrPorts)
\# Copy from template if $(project_name)_intr_handlers.cpp not exist
$(project_name)_intr_handlers.cpp:
	cp $(project_name)_intr_handlers.cpp.tmpl $(project_name)_intr_handlers.cpp

#end if
#if ($HaveTLM2IntrPorts)
\# Copy from template if $(project_name)_intr_handlers.cpp not exist
$(project_name)_intr_handlers.cpp:
	cp $(project_name)_intr_handlers.cpp.tmpl $(project_name)_intr_handlers.cpp

#end if
.cpp.o:
	\$(CC) \$(CFLAGS) \$(INC_DIR) -c \$<

.cc.o:
	\$(CC) \$(CFLAGS) \$(INC_DIR) -c $<

clean:
	rm -f \$(OBJS) *~ \$(EXE) core *.o

model_clean:
	rm -f \$(ACSRCS) \$(ACHEAD) \$(ACINCS) \$(ACFILESHEAD) \$(ACFILES) *.tmpl loader.ac

sim_clean: clean model_clean

distclean: sim_clean
	rm -f main.cpp Makefile.archc

## END FILE
