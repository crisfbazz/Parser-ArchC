/******************************************************
* Behavior Macros File.                               *
* This file is automatically generated by ArchC      *
* WITHOUT WARRANTY OF ANY KIND, either express       *
* or implied.                                        *
* For more information on ArchC, please visit:       *
* http://www.archc.org                               *
*                                                    *
* The ArchC Team                                     *
* Computer Systems Laboratory (LSC)                  *
* IC-UNICAMP                                         *
* http://www.lsc.ic.unicamp.br                       *
******************************************************/

\#ifndef _$(upper_project_name)_BHV_MACROS_H
\#define _$(upper_project_name)_BHV_MACROS_H

#* ac_memory TYPEDEF *#
typedef ac_memport<$(project_name)_parms::ac_word, $(project_name)_parms::ac_Hword> ac_memory;

#* ac_behavior main macro *#
\#define ac_behavior(instr) AC_BEHAVIOR_\#\#instr ()

#* ac_behavior 2nd level macros - generic instruction *#
\#define AC_BEHAVIOR_instruction() $(project_name)_parms::$(project_name)_isa::_behavior_instruction(#slurp
#* common_instr_field_list has the list of fields for the generic instruction. *#
#for pfield in $common_instr_field_list
#if not ($pfield['sign'])
u#slurp
#end if
#if ($pfield['size'] < 9)
int8_t#slurp
#else if ($pfield['size'] < 17)
int16_t#slurp
#else if ($pfield['size'] < 33)
int32_t#slurp
#else
int64_t#slurp
#end if
 $pfield['name']#slurp
#if ($pfield != $common_instr_field_list[-1])
, #slurp
#end if
#end for
)

#* ac_behavior 2nd level macros - pseudo-instructions begin, end *#
\#define AC_BEHAVIOR_begin() $(project_name)_parms::$(project_name)_isa::_behavior_begin()
\#define AC_BEHAVIOR_end() $(project_name)_parms::$(project_name)_isa::_behavior_end()

#* ac_behavior 2nd level macros - instruction types *#
#for pformat in $format_ins_list
\#define AC_BEHAVIOR_$(pformat['name'])() $(project_name)_parms::$(project_name)_isa::_behavior_$(project_name)_$(pformat['name'])(#slurp
#for pfield in $pformat['fields']
#if not ($pfield['sign'])
u#slurp
#end if
#if ($pfield['size'] < 9)
int8_t#slurp
#else if ($pfield['size'] < 17)
int16_t#slurp
#else if ($pfield['size'] < 33)
int32_t#slurp
#else
int64_t#slurp
#end if
 $pfield['name']#slurp
#if ( $pfield != $pformat['fields'][-1] )
, #slurp
#end if
#end for
)
#end for

#* ac_behavior 2nd level macros - instructions *#
#for pinstr in $instr_list
\#define AC_BEHAVIOR_$(pinstr['name'])() $(project_name)_parms::$(project_name)_isa::behavior_$(pinstr['name'])(#slurp
#for pformat in $format_ins_list
#if ($pinstr['format'] == $pformat['name'])
#for pfield in $pformat['fields']
#if not ($pfield['sign'])
u#slurp
#end if
#if ($pfield['size'] < 9)
int8_t#slurp
#else if ($pfield['size'] < 17)
int16_t#slurp
#else if ($pfield['size'] < 33)
int32_t#slurp
#else
int64_t#slurp
#end if
 $pfield['name']#slurp
#if ($pfield != $pformat['fields'][-1])
, #slurp
#end if
#end for
)
#break
#end if
#end for
#end for

#* END OF FILE *#
\#endif //_$(upper_project_name)_BHV_MACROS_H
